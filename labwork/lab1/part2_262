import tensorflow as tf
tf.reset_default_graph()
x1 = tf.constant([4.0, 5.0, 6.0, 2.0, 1.0, 6.0],  name='a')
x2 = tf.constant([7.0, 8.0, 9.0, 5.0, 4.0, 9.0],  name='b')
with tf.name_scope("Mean_of_X_and_Y"):
    with tf.name_scope("Mean_of_X"):
        c=tf.reduce_mean(x1)
        sess=tf.Session()
        print(sess.run(c))
    with tf.name_scope("Mean_of_Y"):
        d=tf.reduce_mean(x2)
        sess=tf.Session()
        print(sess.run(d))
with tf.name_scope("Variance_of_x"):
    e=tf.subtract(x1,c)
    f=tf.multiply(e,e)
    g=tf.reduce_mean(f)
    h=tf.multiply(g, 6,)
    sess=tf.Session()
    print(sess.run(h))
with tf.name_scope("Co-Variance_of_x_and_y"):
    i=tf.subtract(x2,d)
    j=tf.multiply(e,i)
    k=tf.reduce_mean(j)
    l=tf.multiply(k, 6,)
    sess=tf.Session()
    print(sess.run(l))
with tf.name_scope("Value_of_m"):
    m=tf.divide(l,h)
    sess=tf.Session()
    print(sess.run(m))
with tf.name_scope("Value_of_c"):
    n=tf.multiply(m, c,)
    o=tf.subtract(d, n,)
    sess=tf.Session()
    print(sess.run(o))  

with tf.name_scope('Root_mean_square_error'):
    p=tf.subtract(d, x2,)
    r=tf.multiply(p, p)
    s=tf.reduce_sum(r)
    t=tf.divide(s, 6,)
    u=tf.sqrt(t)
    print(sess.run(u))
    
with tf.Session() as sess:
    writer = tf.summary.FileWriter("/tmp/tboard/output3", sess.graph)
    writer.close()
#value of c

import numpy
with tf.Session() as sess:
    a=sess.run(x1)
    b=sess.run(x2)
    graph_x=numpy.asarray(a)
    graph_y=numpy.asarray(b) 
    
    x2=tf.constant([7.0,6.0,5.0,9.0,8.0,6.0])
with tf.Session() as sess:
    x3=sess.run(x2)
x4=numpy.asarray(x3)

y2=[0]*6

with tf.Session() as sess:
    for i in range(len(sess.run(x2))):
        z=sess.run(x2[i])
        w=tf.multiply(z,m)
    
        q=tf.add(w,o)
        y2[i]=sess.run(q)
print(y2)
import matplotlib.pyplot as plt
plt.plot(graph_x,graph_y,'ro',label='Actual values')
plt.plot(x4,y2,label='fitted line')
plt.legend()
plt.show()
